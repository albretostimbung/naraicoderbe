{
    "openapi": "3.0.0",
    "info": {
        "title": "Naraicoder API Documentation",
        "description": "API documentation for the Naraicoder project",
        "contact": {
            "email": "admin@naraicoder.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all events",
                "operationId": "3befe2e8582683a8dc70f7b706a5a97d",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/event-registrations": {
            "get": {
                "tags": [
                    "Event Registrations"
                ],
                "summary": "List all event registrations",
                "operationId": "1c51aaa0072f956096298d6f88841785",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Login",
                "description": "Logs in a user and returns an API token.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "meta": {
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "example": 200
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Login successful"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|aBcDeFgHiJkLmNoPqRsTuVwXyZ"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/partners": {
            "get": {
                "tags": [
                    "Partners"
                ],
                "summary": "List all partners",
                "operationId": "ef2fa97b059bc2343648f5d18160d2c6",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User Registration",
                "description": "Registers a new user and returns the user data.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserApiResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all settings",
                "operationId": "f810df75bcb1059765552b706464d2ba",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/testimonials": {
            "get": {
                "tags": [
                    "Testimonials"
                ],
                "summary": "List all testimonials",
                "operationId": "b717c745beabfaf2bd86a10c3da54141",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/testimonials/featured": {
            "get": {
                "tags": [
                    "Testimonials"
                ],
                "summary": "List featured testimonials",
                "operationId": "5711de6b548824a61ee7c9bcecba4c85",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users with pagination, sorting, and searching.",
                "operationId": "getUsersList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Column to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order ('asc' or 'desc')",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPaginator"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user and returns the user data.",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserApiResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserApiResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Updates an existing user and returns the updated user data.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserApiResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a user record and returns no content.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "User",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "profile_photo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string",
                        "nullable": true
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "job_title": {
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    },
                    "linkedin": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "github": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "portfolio_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "event_registrations": {
                        "type": "array",
                        "items": {}
                    },
                    "testimonials": {
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object"
            },
            "UserPaginator": {
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "next_page_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "format": "uri"
                    },
                    "per_page": {
                        "type": "integer"
                    },
                    "prev_page_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UserApiResponse": {
                "properties": {
                    "meta": {
                        "properties": {
                            "code": {
                                "type": "integer"
                            },
                            "status": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "data": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "profile_photo": {
                        "type": "string",
                        "format": "binary"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "job_title": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "linkedin": {
                        "type": "string",
                        "format": "uri"
                    },
                    "github": {
                        "type": "string",
                        "format": "uri"
                    },
                    "portfolio_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "profile_photo": {
                        "type": "string",
                        "format": "binary"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "skills": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "job_title": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "linkedin": {
                        "type": "string",
                        "format": "uri"
                    },
                    "github": {
                        "type": "string",
                        "format": "uri"
                    },
                    "portfolio_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "location": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Event Registrations",
            "description": "Event Registrations"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Partners",
            "description": "Partners"
        },
        {
            "name": "Settings",
            "description": "Settings"
        },
        {
            "name": "Testimonials",
            "description": "Testimonials"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}